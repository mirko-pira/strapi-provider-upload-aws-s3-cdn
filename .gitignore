# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*lib
yarn-error.log*

# JetBrains editor configs
.idea/
.vscode/

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# nyc test coverage
.nyc_output

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (http://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# Typescript v1 declaration files
typings/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# dotenv environment variables file
.env

# gatsby files
.cache/
#public

# Mac files
.DS_Store

# Yarn
yarn-error.log
.pnp/
.pnp.js
# Yarn Integrity file
.yarn-integrity

# Database folder
db/
/.env.dev
.pgdata
app/env.json
app/service.js
samconfig.toml

backend/sam/checkout/.aws-sam/build.toml
backend/.pgdata
backend/._.pgdata
backend/strapi/.strapi-updater.json
backend/strapi/package-lock.json
web/src/react-app-env.d.ts
/.vagrant/

*.tsbuildinfo
dist

.serverless
/backend/localstack/.tmp/


### Terraform ###
# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

.terraform.lock.hcl

# Crash log files
crash.log

# Ignore any .tfvars files that are generated automatically for each Terraform run. Most
# .tfvars files are managed as part of configuration and so should be included in
# version control.
#
.tfvars
terraform.tfvars
prod.tfvars
stage.tfvars
dev.tfvars


# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# End of https://www.gitignore.io/api/python,terraform
.vscode
/infrastructure/build/
env.local.json
/infrastructure/functions/common-layer/exports/
